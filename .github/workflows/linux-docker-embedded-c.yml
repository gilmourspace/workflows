name: Embedded C Docker

on:
    workflow_call:
        inputs:
            runs-on:
                description: "The tag that specifies which runner to execute this workflow on."
                required: false
                type: string
                default: "cross-arm-none-eabi"
            project-directory:
                description: "A relative path from the embedded-cross-framework root directory to the directory containing the project directory."
                required: false
                type: string
                default: "projects/bare_metal"
            embedded-cross-framework-ref:
                description: "The branch, tag or SHA to checkout when checking out the embedded-cross-framework."
                required: false
                type: string
                default: "main"
            embedded-cross-framework-repository:
                description: "The repository to use when cloning the embedded-cross-framework."
                required: false
                type: string
                default: "mipalgu/embedded-cross-framework"
            cmake-preset:
                description: "The cmake preset to use when building the project."
                required: false
                type: string
                default: "arm-none-eabi-gcc"
            boards:
                description: "The boards to build the project for."
                required: false
                type: string
                default: "ALL_BOARDS"


jobs:

  debug:
    runs-on: [docker]
    container:
      image: ghcr.io/gilmourspace/gspaceenv:0
      credentials:
        username: ${{ secrets.WORKFLOW_USERNAME }}
        password: ${{ secrets.CONTAINER_PAT }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
            repository: ${{ inputs.embedded-cross-framework-repository }}
            ref: ${{ inputs.embedded-cross-framework-ref }}
            submodules: 'recursive'

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
            path: "${{ inputs.project-directory }}/${{ github.event.repository.name }}"
            submodules: 'recursive'

      - name: Build Debug
        run: |
            cmake --preset "${{ inputs.cmake-preset }}-debug" -DPROJECTS="${{ github.event.repository.name }}" -DBOARDS="${{ inputs.boards }}"
            cmake --build --preset "${{ inputs.cmake-preset }}-debug"
