name: Ubuntu 20.04 Swift Docker
on:
    workflow_call:
      inputs:
        swift-version:
          description: "The swift version to use to build and test the package."
          required: false
          type: string
          default: "5.9.1"
        packages-to-install:
          description: "A list of packages to install before running the workflow."
          required: false
          type: string
          default: ""

jobs:
  debug:
    runs-on: [docker]
    container:
      image: ghcr.io/gilmourspace/gspaceenv:0
      credentials:
        username: ${{ secrets.WORKFLOW_USERNAME }}
        password: ${{ secrets.CONTAINER_PAT }}
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOYSSHSECRET }}

      - name: Install Packages
        if: inputs.packages-to-install != ''
        run: |
          apt-get install -y ${{ inputs.packages-to-install }}

      - name: Setup Swift
        run: |
          swiftenv install ${{ inputs.swift-version }} || true
          swiftenv global ${{ inputs.swift-version }}

      - name: Debug Build
        run: swift build -c debug

      - name: Debug Test
        run: swift test

  release:
    runs-on: [docker]
    container:
      image: ghcr.io/gilmourspace/gspaceenv:0
      credentials:
        username: ${{ secrets.WORKFLOW_USERNAME }}
        password: ${{ secrets.CONTAINER_PAT }}
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.DEPLOYSSHSECRET }}

      - name: Install Packages
        if: inputs.packages-to-install != ''
        run: |
          apt-get install -y ${{ inputs.packages-to-install }}

      - name: Setup Swift
        run: |
          swiftenv install ${{ inputs.swift-version }} || true
          swiftenv global ${{ inputs.swift-version }}

      - name: Release build
        run: swift build -c release

      - name: Release Test
        run: swift test -c release
